[gd_scene load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "// NOTE: Shader automatically converted from Godot Engine 3.4.3.stable's SpatialMaterial.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	vec3 norm_cross1 = normalize(cross(vec3(0.0, 1.0, 0.0), CAMERA_MATRIX[2].xyz));
	vec3 norm_cross2 = normalize(cross(CAMERA_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0)));
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(vec4(norm_cross1, 0.0),vec4(0.0, 1.0, 0.0, 0.0),vec4(norm_cross2, 0.0),WORLD_MATRIX[3]);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[sub_resource type="QuadMesh" id=3]
size = Vector2( 10, 1 )

[node name="BillbordTest" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null
